import OnePlanarTester as opt
import sys
import networkx as nx
import matplotlib.pyplot as plt
adjacency_dict = {
0: (1, 2, 3, 4, 5, 6, 7),
1: (0, 2, 3, 4, 5, 6),
2: (0, 1, 3),
3: (0, 1, 2, 4, 5, 7),
4: (0, 1, 3, 5, 6, 7),
5: (0, 1, 3, 4, 6, 7),
6: (0, 1, 4, 5, 7),
7: (0, 3, 4, 5, 6)}




#Tie Graph:
adjacency_dict = {
0: (1, 2, 3, 4, 5, 6, 7),
1: (0, 2, 3, 4, 5, 6),
2: (0, 1, 3),
3: (0, 1, 2, 4, 5, 7),
4: (0, 1, 3, 5, 6, 7),
5: (0, 1, 3, 4, 6, 7),
6: (0, 1, 4, 5, 7),
7: (0, 3, 4, 5, 6)}

#fake double windmill
adjacency_dict = {
    0: (1, 2, 3, 4, 5, 7),
    1: (0, 2, 3, 4, 5, 7),
    2: (0, 1, 3),
    3: (0, 1, 2, 4, 5, 7),
    4: (0, 1, 3, 5, 6, 7),
    5: (0, 1, 3, 4, 6, 7),
    6: (4, 5, 7),
    7: (0, 1, 3, 4, 5, 6)}

#7-regular cross looking thing

adjacency_dict = {
    0: (1, 2, 3, 4, 13, 20, 23),
    1: (0, 2, 3, 7, 19, 20, 23),
    2: (0, 1, 3, 4, 5, 6, 8),
    3: (0, 1, 2, 5, 6, 7, 12),
    4: (0, 2, 5, 8, 13, 14, 20),
    5: (2, 3, 4, 6, 8, 9, 10),
    6: (2, 3, 5, 7, 10, 11, 12),
    7: (1, 3, 6, 12, 18, 19, 23),
    8: (2, 4, 5, 9, 10, 13, 14),
    9: (5, 8, 10, 11, 14, 15, 16),
    10: (5, 6, 8, 9, 11, 12, 16),
    11: (6, 9, 10, 12, 16, 17, 18),
    12: (3, 6, 7, 10, 11, 18, 19),
    13: (0, 4, 8, 14, 15, 20, 21),
    14: (4, 8, 9, 13, 15, 16, 21),
    15: (9, 13, 14, 16, 17, 21, 22),
    16: (9, 10, 11, 14, 15, 17, 18),
    17: (11, 15, 16, 18, 19, 21, 22),
    18: (7, 11, 12, 16, 17, 19, 22),
    19: (1, 7, 12, 17, 18, 22, 23),
    20: (0, 1, 4, 13, 21, 22, 23),
    21: (13, 14, 15, 17, 20, 22, 23),
    22: (15, 17, 18, 19, 20, 21, 23),
    23: (0, 1, 7, 19, 20, 21, 22)
}

G = nx.Graph(adjacency_dict)
k = nx.node_connectivity(G)
print(k)